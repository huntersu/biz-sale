<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.biz.mapper.SaleLoginUserMapper" >
    <!--定义resultMap使数据库中的字段和pojo中的字段一一映射-->
    <resultMap id="BaseResultMap" type="com.biz.domain.SaleLoginUser" >
        <!-- id -->
        <id column="id" property="id"/>
        <!-- 客户姓名 -->
        <result column="name" property="name"/>
        <!-- 登录密码 -->
        <result column="password" property="password" />
        <!-- 登录名 -->
        <result column="loginname" property="loginname"/>
        <!-- 所属部门 -->
        <result column="department" property="department"/>
        <!-- 用户头像 -->
        <result column="displayImage" property="displayimage"/>
    </resultMap>

    <sql id="Base_Column_List" >
        id, name, password, department, loginname, displayImage
    </sql>

    <!-- 动态查询条件sql片段 -->
    <sql id="Base_query_criteria" >
        <if test="id != null" >
            id = #{id}
        </if>
        <if test="name != null" >
            AND name = #{name}
        </if>
        <if test="password != null" >
            AND password = #{password}
        </if>
        <if test="department != null" >
            AND department = #{department}
        </if>
        <if test="loginname != null" >
            AND loginname = #{loginname}
        </if>
        <if test="displayimage != null" >
            AND displayImage = #{displayimage}
        </if>
    </sql>

    <select id="findAllUser" resultType="saleLoginUser">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            sale_login_user
    </select>

    <!--登录时，根据用户名查询用户信息-->
    <select id="findUserByLoginName" parameterType="java.lang.String" resultType="saleLoginUser">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            sale_login_user
        WHERE
            loginname=#{loginname}
    </select>

    <!-- 新增数据，返回主键 -->
    <insert id="save" parameterType="saleLoginUser" useGeneratedKeys="true" keyProperty="id">
        insert into sale_login_user (id, name, password, department, loginname, displayImage)
        values (#{id}, #{name}, #{password}, #{department}, #{loginname}, #{displayimage})
    </insert>

    <!-- 查询用户表中的所有数据 -->
    <select id="selectAll" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List" />
        from
            sale_login_user
    </select>

    <!-- 多条件查询 -->
    <select id="findUserSelective" parameterType="saleLoginUser" resultMap="BaseResultMap" >
        select
            <include refid="Base_Column_List" />
        from
            sale_login_user
        <where>
            <include refid="Base_query_criteria" />
        </where>
    </select>

    <!-- 根据ID查询 -->
    <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap" >
        select
            <include refid="Base_Column_List" />
        from
            sale_login_user
        where
            id = #{id}
    </select>

    <!-- 多条件统计查询 -->
    <select id="countBySelective" parameterType="saleLoginUser" resultType="java.lang.Integer" >
        select
            count(*)
        from
            sale_login_user
        <where>
            <include refid="Base_query_criteria" />
        </where>
    </select>

    <!-- 根据ID修改数据 -->
    <update id="updateById" parameterType="saleLoginUser" >
        update
            sale_login_user
        set
            name = #{name},
            password = #{password},
            department = #{department},
            loginname = #{loginname},
            displayImage = #{displayimage}
        where
            id = #{id}
    </update>

    <!-- 根据ID动态修改数据 -->
    <update id="updateByIdSelective" parameterType="saleLoginUser" >
        update
            sale_login_user
        <set >
            <if test="name != null" >
                name = #{name},
            </if>
            <if test="password != null" >
                password = #{password},
            </if>
            <if test="department != null" >
                department = #{department},
            </if>
            <if test="loginname != null" >
                loginname = #{loginname},
            </if>
            <if test="displayimage != null" >
                displayImage = #{displayimage},
            </if>
        </set>
        where
            id = #{id}
    </update>

    <!-- 根据ID删除数据 -->
    <delete id="deleteById" parameterType="java.lang.String" >
        delete from
            sale_login_user
        where
            id = #{id}
    </delete>

    <!-- 删除所有数据 -->
    <delete id="deleteAll" parameterType="java.lang.String" >
        delete from sale_login_user
    </delete>
</mapper>